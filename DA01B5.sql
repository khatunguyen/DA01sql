-- Bài 1
SELECT DISTINCT CITY FROM STATION
WHERE ID%2=0
-- Bài 2
SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION;
-- BÀI 3
-- BÀI 4
SELECT ROUND
( SUM(item_count::DECIMAL*order_occurrences)/
SUM(order_occurrences)
,1) AS MEAN
FROM ITEMS_PER_ORDER
-- BÀI 5
SELECT CANDIDATE_ID
FROM CANDIDATES
WHERE SKILL IN ('Python','Tableau','PostgreSQL')
GROUP BY CANDIDATE_ID
HAVING COUNT(SKILL)=3
ORDER BY CANDIDATE_ID ASC
-- BÀI 06 
SELECT USER_ID, MAX(post_date::DATE) - MIN(post_date::DATE) AS days_between
FROM POSTS
WHERE DATE_PART('YEAR',post_date::DATE)=2021
GROUP BY user_id
HAVING COUNT(POST_ID)>1
--- BÀI 07
SELECT CARD_NAME, MAX(ISSUED_AMOUNT)-MIN(ISSUED_AMOUNT) AS DIFFERENCE
FROM monthly_cards_issued
GROUP BY  CARD_NAME
ORDER BY MAX(ISSUED_AMOUNT)-MIN(ISSUED_AMOUNT) DESC;
-- BÀI 08
SELECT manufacturer, 
count(drug) AS drug_count,
abs(sum(total_sales - cogs)) as total_loss
FROM pharmacy_sales
where total_sales < cogs
group by manufacturer
ORDER BY total_loss DESC;
-- BÀI 09
SELECT*
FROM CINEMA
WHERE DESCRIPTION NOT IN ('boring')
AND ID%2<>0
ORDER BY ID DESC
-- BÀI 10
SELECT TEACHER_ID,
COUNT(DISTINCT SUBJECT_ID) AS CNT
FROM TEACHER
GROUP BY TEACHER_ID
-- BÀI 11
SELECT USER_ID,
COUNT(FOLLOWER_ID) AS followers_count
FROM FOLLOWERS
GROUP BY  USER_ID
ORDER BY USER_ID
-- BÀI 12
SELECT ClASS
FROM COURSES
GROUP BY CLASS
HAVING COUNT(CLASS) >=5

